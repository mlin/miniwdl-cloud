---
- name: ensure dockerd has initialized iptables by running a no-op container
  docker_container:
    name: nop
    image: alpine:3
    command: date
    detach: no
    cleanup: yes
  changed_when: False
# prevent docker containers from contacting EC2 instance metadata service (which may e.g. disponse
# credentials for instance roles)
- name: block EC2 instance metadata service
  iptables:
    chain: DOCKER-USER
    destination: 169.254.169.254
    jump: REJECT
    action: insert
# prevent docker containers from contacting swarm and Lustre ports in our VPC address space
- name: block Swarm and Lustre ports in VPC
  iptables:
    chain: DOCKER-USER
    protocol: "{{ item.protocol }}"
    destination: 10.0.0.0/16
    destination_port: "{{ item.port }}"
    jump: REJECT
    action: insert
  loop:
    - { protocol: "tcp", port: "2376:2377" }
    - { protocol: "tcp", port: "7946" }
    - { protocol: "udp", port: "7946" }
    - { protocol: "tcp", port: "988" }
    - { protocol: "tcp", port: "1021:1023" }
- name: netfilter-persistent save
  command: netfilter-persistent save
  changed_when: False
- name: verify EC2 metadata service is blocked from docker containers
  command: docker run --rm -it alpine:3 wget -qO - http://169.254.169.254
  register: checkblock
  failed_when: checkblock.rc == 0
  changed_when: False
